version: '3'

services:

  db:
    image: mysql:5.7
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: bustime
      MYSQL_DATABASE: buses
      MYSQL_USER: nycbuswatcher
      MYSQL_PASSWORD: bustime
      TZ: America/New_York
    volumes:
      - bus_database:/var/lib/mysql

  acquire:
    restart: always
    build:
      context: .
      dockerfile: ./build/acquire/Dockerfile
    depends_on:
      - db
    volumes:
      - bus_files:/app/data
      - bus_static:/app/api/static
    command:
      python3 /app/acquire.py

  api:
    restart: always
    build:
      context: .
      dockerfile: ./build/api/Dockerfile
    volumes:
      - bus_static:/app/api/static
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`api.localhost`)"
      - "traefik.http.routers.api.entrypoints=web"
    command:
      uvicorn --host=0.0.0.0 --port=80 api:app

  app:
    restart: always
    build:
      context: .
      dockerfile: ./build/app/Dockerfile
    volumes:
      - bus_assets:/app/assets
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.app.rule=Host(`app.localhost`)"
      - "traefik.http.routers.app.entrypoints=web"
      - "traefik.http.services.app.loadbalancer.server.port=8000"
    command:
      gunicorn --workers=4 --threads=1 -b 0.0.0.0:8000 --forwarded-allow-ips="*" app:server

  # todo SSL / let's encrypt traefik config this guide https://www.valentinog.com/blog/traefik/
  # after https://kleiber.me/blog/2021/03/23/simple-docker-traefik-python-fastapi-example/
  traefik:
    image: traefik:latest
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
      - "--providers.docker.exposedbydefault=false"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro

  dyndns:
    restart: always
    build:
      context: ./build/dyndns
      dockerfile: ./Dockerfile

volumes:
  bus_database:
  bus_files:
  bus_static:
  bus_assets:
