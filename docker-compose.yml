version: '3'

services:

  acquire:
    restart: always
    build:
      context: .
      dockerfile: ./build/acquire/Dockerfile
    depends_on:
      - db
    volumes:
      - ./data:/app/data
    command:
      python3 /app/acquire.py

  # based on https://dev.to/sonyarianto/how-to-spin-mongodb-server-with-docker-and-docker-compose-2lef
  # official docs at https://hub.docker.com/_/mongo

  # https://faun.pub/managing-mongodb-on-docker-with-docker-compose-26bf8a0bbae3

  db:
    image: mongo:latest
    environment:
      MONGO_INITDB_DATABASE: nycbuswatcher
    ports:
      - 27017:27017
    volumes:
      - ./db:/data/db
      - ./build/mongo/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro #bug may be unnecessary for authentication but useful for creating an index?


  api:
    build:
      context: .
      dockerfile: ./build/api/Dockerfile
    restart: always
    ports:
      - 80:80
    volumes:
      - db:/app/data

#  #todo how to make this work properly on local test stack?
#  traefik:
#    image: traefik:v2.3
#    ports:
#      - 80:80
#      - 443:443
#    restart: always
#    volumes:
#      - /var/run/docker.sock:/var/run/docker.sock:ro
#      - $PWD/build/traefik/traefik.toml:/etc/traefik/traefik.toml
#      - traefik-public-certificates:/certificates
#
#  api:
#    build:
#      context: .
#      dockerfile: ./build/api/Dockerfile
#    restart: always
#    labels:
#      - traefik.enable=true
#      - traefik.http.routers.api.rule=Host(`api.buswatcher.org`)
#      - traefik.http.routers.api.tls=true
#      - traefik.http.routers.api.tls.certresolver=letsencrypt
#      # - traefik.port=8000
#    volumes:
#      - ./data:/app/data
#

volumes:
  traefik-public-certificates:
  db:
