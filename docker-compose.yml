version: '3'

services:

  acquire:
    restart: always
    build:
      context: .
      dockerfile: ./build/acquire/Dockerfile
    volumes:
      - ./data:/app/data
    networks:
      - nycbuswatcher-default
    command:
      python3 /app/acquire.py


  api:
    restart: always
    build:
      context: .
      dockerfile: ./build/api/Dockerfile
    volumes:
      - ./data:/app/data
    networks:
      - nycbuswatcher-default
    ports:
      - 8000:8000
    command:
      uvicorn --host=0.0.0.0 --port=8000 api:app


  nginx: 
    image: jwilder/nginx-proxy
    container_name: nginx
    ports:
      - 80:80
      # - 443:443
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      # - ./letsencrypt/certs:/etc/nginx/certs:ro
      - ./build/nginx/nginx.conf:/etc/nginx/nginx.conf
    networks:
      - nycbuswatcher-default
    restart: always


  reprocessor:
    restart: always
    build:
      context: .
      dockerfile: ./build/reprocessor/Dockerfile
    volumes:
      - ./data:/app/data
      - ./archives:/app/archives
    networks:
      - nycbuswatcher-default
    command:
      tail -f /dev/null # keep the container alive for me

#  # dashboard dash app (standalone)
#  app:
#    restart: always
#    build:
#      context: .
#      dockerfile: ./build/app/Dockerfile
##    volumes:
##      - ./assets:/app/assets
#    ports:
#      - 8000:80
#    command:
#      gunicorn --workers=4 --timeout=120 --threads=1 -b 0.0.0.0:8000 --forwarded-allow-ips="*" app_dash:server

networks:
  nycbuswatcher_default:
    # external: true
    driver: bridge
